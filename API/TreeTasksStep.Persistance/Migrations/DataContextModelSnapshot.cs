// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreeTasksStep.Persistance;

namespace TreeTasksStep.Persistance.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TreeTasksStep.Domain.Step", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentStepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentStepId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("TreeTasksStep.Domain.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TreeTasksStep.Domain.Step", b =>
                {
                    b.HasOne("TreeTasksStep.Domain.Step", "ParentStep")
                        .WithMany("ChildrenSteps")
                        .HasForeignKey("ParentStepId");

                    b.HasOne("TreeTasksStep.Domain.Task", "ParentTask")
                        .WithMany("Steps")
                        .HasForeignKey("ParentTaskId");

                    b.Navigation("ParentStep");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("TreeTasksStep.Domain.Step", b =>
                {
                    b.Navigation("ChildrenSteps");
                });

            modelBuilder.Entity("TreeTasksStep.Domain.Task", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
